/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-md: 50rem;
    --breakpoint-lg: 70rem;
    --breakpoint-xl: 90rem;
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-bold: 700;
    --font-weight-black: 900;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
    --color-primary: #e31f26;
    --color-dark-blue: #20252b;
    --color-titanium: #b2ac9e;
    --color-light-gray: #e4e4e4;
    --color-light-grey-alt: #f3f3f3;
    --color-gray: #cbcac8;
    --animate-header: header 0.5s ease-in-out;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-5 {
    top: calc(var(--spacing) * 5);
  }
  .top-\[57px\] {
    top: 57px;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-5 {
    right: calc(var(--spacing) * 5);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-\[9rem\] {
    bottom: 9rem;
  }
  .bottom-\[28px\] {
    bottom: 28px;
  }
  .bottom-\[61px\] {
    bottom: 61px;
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
    @media (width >= 90%) {
      max-width: 90%;
    }
    @media (width >= 30rem) {
      max-width: 30rem;
    }
    @media (width >= 50rem) {
      max-width: 50rem;
    }
    @media (width >= 70rem) {
      max-width: 70rem;
    }
    @media (width >= 90rem) {
      max-width: 90rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .container {
    padding-inline: 1rem;
    margin-inline: auto;
    @media (width >= 50rem) {
      max-width: var(--breakpoint-md);
    }
    @media (width >= 70rem) {
      max-width: var(--breakpoint-lg);
    }
    @media (width >= 90rem) {
      max-width: var(--breakpoint-xl);
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mb-10 {
    margin-bottom: calc(var(--spacing) * 10);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-flex {
    display: inline-flex;
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-\[2px\] {
    height: 2px;
  }
  .h-\[70px\] {
    height: 70px;
  }
  .h-\[86px\] {
    height: 86px;
  }
  .h-\[96px\] {
    height: 96px;
  }
  .h-\[196px\] {
    height: 196px;
  }
  .h-\[202px\] {
    height: 202px;
  }
  .h-\[236px\] {
    height: 236px;
  }
  .h-\[450px\] {
    height: 450px;
  }
  .h-\[clamp\(4\.375rem\,4\.0461rem\+1\.3158vw\,5\.625rem\)\] {
    height: clamp(4.375rem, 4.0461rem + 1.3158vw, 5.625rem);
  }
  .h-\[clamp\(40\.625rem\,38\.8158rem\+7\.2368vw\,47\.5rem\)\] {
    height: clamp(40.625rem, 38.8158rem + 7.2368vw, 47.5rem);
  }
  .h-full {
    height: 100%;
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-9 {
    width: calc(var(--spacing) * 9);
  }
  .w-\[54\%\] {
    width: 54%;
  }
  .w-\[86px\] {
    width: 86px;
  }
  .w-\[180px\] {
    width: 180px;
  }
  .w-\[307px\] {
    width: 307px;
  }
  .w-\[clamp\(4\.375rem\,4\.0461rem\+1\.3158vw\,5\.625rem\)\] {
    width: clamp(4.375rem, 4.0461rem + 1.3158vw, 5.625rem);
  }
  .w-\[clamp\(15\.625rem\,10\.2467rem\+21\.5132vw\,36\.0625rem\)\] {
    width: clamp(15.625rem, 10.2467rem + 21.5132vw, 36.0625rem);
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[254px\] {
    max-width: 254px;
  }
  .max-w-\[550px\] {
    max-width: 550px;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-\[2px\] {
    --tw-translate-x: calc(2px * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-1 {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-\[2px\] {
    --tw-translate-y: calc(2px * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-\[25px\] {
    --tw-translate-y: calc(25px * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-\[125px\] {
    --tw-translate-y: calc(125px * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[clamp\(1rem\,0\.8026rem\+0\.7895vw\,1\.75rem\)\] {
    --tw-translate-y: clamp(1rem, 0.8026rem + 0.7895vw, 1.75rem);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .resize {
    resize: both;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-\[clamp\(1\.5625rem\,0\.3947rem\+4\.6711vw\,6rem\)\] {
    gap: clamp(1.5625rem, 0.3947rem + 4.6711vw, 6rem);
  }
  .-space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * -2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * -2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-5 {
    column-gap: calc(var(--spacing) * 5);
  }
  .gap-y-24 {
    row-gap: calc(var(--spacing) * 24);
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded-\[10px\] {
    border-radius: 10px;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-\[1px\] {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-dark-blue {
    border-color: var(--color-dark-blue);
  }
  .border-gray {
    border-color: var(--color-gray);
  }
  .border-light-gray {
    border-color: var(--color-light-gray);
  }
  .border-light-grey-alt {
    border-color: var(--color-light-grey-alt);
  }
  .border-titanium {
    border-color: var(--color-titanium);
  }
  .border-b-\[\#F3F3F3\] {
    border-bottom-color: #F3F3F3;
  }
  .bg-dark-blue {
    background-color: var(--color-dark-blue);
  }
  .bg-light-grey-alt {
    background-color: var(--color-light-grey-alt);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-titanium {
    background-color: var(--color-titanium);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-white {
    --tw-gradient-from: var(--color-white);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-60\% {
    --tw-gradient-from-position: 60%;
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .object-cover {
    object-fit: cover;
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .p-\[15px\] {
    padding: 15px;
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-\[85px\] {
    padding-inline: 85px;
  }
  .px-\[clamp\(1rem\,0\.7368rem\+1\.0526vw\,2rem\)\] {
    padding-inline: clamp(1rem, 0.7368rem + 1.0526vw, 2rem);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-\[22px\] {
    padding-block: 22px;
  }
  .py-\[clamp\(5rem\,4\.3421rem\+2\.6316vw\,7\.5rem\)\] {
    padding-block: clamp(5rem, 4.3421rem + 2.6316vw, 7.5rem);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }
  .pt-\[100px\] {
    padding-top: 100px;
  }
  .pt-\[180px\] {
    padding-top: 180px;
  }
  .pt-\[clamp\(1\.25rem\,1\.0197rem\+0\.9211vw\,2\.125rem\)\] {
    padding-top: clamp(1.25rem, 1.0197rem + 0.9211vw, 2.125rem);
  }
  .pt-\[clamp\(2\.8125rem\,2\.4013rem\+1\.6447vw\,4\.375rem\)\] {
    padding-top: clamp(2.8125rem, 2.4013rem + 1.6447vw, 4.375rem);
  }
  .pt-\[clamp\(5rem\,4\.3421rem\+2\.6316vw\,7\.5rem\)\] {
    padding-top: clamp(5rem, 4.3421rem + 2.6316vw, 7.5rem);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-\[2px\] {
    padding-bottom: 2px;
  }
  .pb-\[10px\] {
    padding-bottom: 10px;
  }
  .pb-\[18px\] {
    padding-bottom: 18px;
  }
  .pb-\[30px\] {
    padding-bottom: 30px;
  }
  .pb-\[60px\] {
    padding-bottom: 60px;
  }
  .pb-\[clamp\(2rem\,1\.6217rem\+1\.5132vw\,3\.4375rem\)\] {
    padding-bottom: clamp(2rem, 1.6217rem + 1.5132vw, 3.4375rem);
  }
  .text-center {
    text-align: center;
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-\[clamp\(1\.5rem\,1\.3684rem\+0\.5263vw\,2rem\)\] {
    font-size: clamp(1.5rem, 1.3684rem + 0.5263vw, 2rem);
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .text-dark-blue {
    color: var(--color-dark-blue);
  }
  .text-gray {
    color: var(--color-gray);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-30 {
    --tw-duration: 30ms;
    transition-duration: 30ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .backface-hidden {
    backface-visibility: hidden;
  }
  .group-hover\:visible {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        visibility: visible;
      }
    }
  }
  .group-hover\:translate-x-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:rotate-45 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        rotate: 45deg;
      }
    }
  }
  .group-hover\:text-primary {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .group-hover\:invert {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-invert: invert(100%);
        filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:rotate-360 {
    &:hover {
      @media (hover: hover) {
        rotate: 360deg;
      }
    }
  }
  .hover\:border-primary {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-primary);
      }
    }
  }
  .hover\:bg-primary {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .xs\:w-\[258\.19px\] {
    @media (width >= 90%) {
      width: 258.19px;
    }
  }
  .sm\:w-\[258\.19px\] {
    @media (width >= 30rem) {
      width: 258.19px;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 30rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:gap-y-14 {
    @media (width >= 30rem) {
      row-gap: calc(var(--spacing) * 14);
    }
  }
  .md\:top-\[4rem\] {
    @media (width >= 50rem) {
      top: 4rem;
    }
  }
  .md\:bottom-10 {
    @media (width >= 50rem) {
      bottom: calc(var(--spacing) * 10);
    }
  }
  .md\:bottom-\[75px\] {
    @media (width >= 50rem) {
      bottom: 75px;
    }
  }
  .md\:left-\[4rem\] {
    @media (width >= 50rem) {
      left: 4rem;
    }
  }
  .md\:block {
    @media (width >= 50rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 50rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 50rem) {
      display: none;
    }
  }
  .md\:h-\[18px\] {
    @media (width >= 50rem) {
      height: 18px;
    }
  }
  .md\:h-\[80px\] {
    @media (width >= 50rem) {
      height: 80px;
    }
  }
  .md\:h-\[136px\] {
    @media (width >= 50rem) {
      height: 136px;
    }
  }
  .md\:h-auto {
    @media (width >= 50rem) {
      height: auto;
    }
  }
  .md\:w-\[220px\] {
    @media (width >= 50rem) {
      width: 220px;
    }
  }
  .md\:w-fit {
    @media (width >= 50rem) {
      width: fit-content;
    }
  }
  .md\:-translate-x-0 {
    @media (width >= 50rem) {
      --tw-translate-x: calc(var(--spacing) * -0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:-translate-y-\[30px\] {
    @media (width >= 50rem) {
      --tw-translate-y: calc(30px * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:-translate-y-\[35px\] {
    @media (width >= 50rem) {
      --tw-translate-y: calc(35px * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 50rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-\[200px_1fr_200px\] {
    @media (width >= 50rem) {
      grid-template-columns: 200px 1fr 200px;
    }
  }
  .md\:flex-row {
    @media (width >= 50rem) {
      flex-direction: row;
    }
  }
  .md\:gap-6 {
    @media (width >= 50rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .md\:gap-10 {
    @media (width >= 50rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .md\:bg-left {
    @media (width >= 50rem) {
      background-position: left;
    }
  }
  .md\:p-8 {
    @media (width >= 50rem) {
      padding: calc(var(--spacing) * 8);
    }
  }
  .md\:p-\[30px\] {
    @media (width >= 50rem) {
      padding: 30px;
    }
  }
  .md\:px-8 {
    @media (width >= 50rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .md\:py-\[42px\] {
    @media (width >= 50rem) {
      padding-block: 42px;
    }
  }
  .md\:pt-\[10px\] {
    @media (width >= 50rem) {
      padding-top: 10px;
    }
  }
  .md\:pt-\[480px\] {
    @media (width >= 50rem) {
      padding-top: 480px;
    }
  }
  .md\:pr-\[4rem\] {
    @media (width >= 50rem) {
      padding-right: 4rem;
    }
  }
  .md\:pb-\[30px\] {
    @media (width >= 50rem) {
      padding-bottom: 30px;
    }
  }
  .md\:text-lg {
    @media (width >= 50rem) {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
  .lg\:static {
    @media (width >= 70rem) {
      position: static;
    }
  }
  .lg\:top-\[13rem\] {
    @media (width >= 70rem) {
      top: 13rem;
    }
  }
  .lg\:left-\[13\.12rem\] {
    @media (width >= 70rem) {
      left: 13.12rem;
    }
  }
  .lg\:ml-\[6rem\] {
    @media (width >= 70rem) {
      margin-left: 6rem;
    }
  }
  .lg\:flex {
    @media (width >= 70rem) {
      display: flex;
    }
  }
  .lg\:grid {
    @media (width >= 70rem) {
      display: grid;
    }
  }
  .lg\:hidden {
    @media (width >= 70rem) {
      display: none;
    }
  }
  .lg\:h-\[90px\] {
    @media (width >= 70rem) {
      height: 90px;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 70rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 70rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 70rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-\[345px_1fr_345px\] {
    @media (width >= 70rem) {
      grid-template-columns: 345px 1fr 345px;
    }
  }
  .lg\:flex-row {
    @media (width >= 70rem) {
      flex-direction: row;
    }
  }
  .lg\:items-center {
    @media (width >= 70rem) {
      align-items: center;
    }
  }
  .lg\:gap-8 {
    @media (width >= 70rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .lg\:gap-12 {
    @media (width >= 70rem) {
      gap: calc(var(--spacing) * 12);
    }
  }
  .lg\:gap-\[60px\] {
    @media (width >= 70rem) {
      gap: 60px;
    }
  }
  .lg\:bg-transparent {
    @media (width >= 70rem) {
      background-color: transparent;
    }
  }
  .lg\:p-0 {
    @media (width >= 70rem) {
      padding: calc(var(--spacing) * 0);
    }
  }
  .lg\:p-10 {
    @media (width >= 70rem) {
      padding: calc(var(--spacing) * 10);
    }
  }
  .lg\:pt-0 {
    @media (width >= 70rem) {
      padding-top: calc(var(--spacing) * 0);
    }
  }
  .lg\:pr-\[13\.87rem\] {
    @media (width >= 70rem) {
      padding-right: 13.87rem;
    }
  }
  .lg\:pb-\[100px\] {
    @media (width >= 70rem) {
      padding-bottom: 100px;
    }
  }
  .lg\:text-\[22px\] {
    @media (width >= 70rem) {
      font-size: 22px;
    }
  }
  .lg\:text-dark-blue {
    @media (width >= 70rem) {
      color: var(--color-dark-blue);
    }
  }
  .xl\:w-auto {
    @media (width >= 90rem) {
      width: auto;
    }
  }
  .xl\:gap-12 {
    @media (width >= 90rem) {
      gap: calc(var(--spacing) * 12);
    }
  }
  .xl\:bg-center {
    @media (width >= 90rem) {
      background-position: center;
    }
  }
  .xl\:py-\[clamp\(5rem\,4\.3421rem\+2\.6316vw\,7\.5rem\)\] {
    @media (width >= 90rem) {
      padding-block: clamp(5rem, 4.3421rem + 2.6316vw, 7.5rem);
    }
  }
}
::-webkit-scrollbar {
  width: 4px;
  height: 12px;
}
::-webkit-scrollbar-track {
  border-radius: 10px;
}
::-webkit-scrollbar-thumb {
  background-color: #d8d8d8;
  border-radius: 10px;
  transition: width 0.2s ease;
}
button {
  cursor: pointer;
}
@layer components {
  h1, h2, h3, h4, h5, h6 {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .header-sticky {
    position: fixed;
    inset-inline: calc(var(--spacing) * 0);
    top: calc(var(--spacing) * 0);
    z-index: 50;
    animation: var(--animate-header);
    background-color: var(--color-white);
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .primary-btn {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 3.5);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
    text-transform: uppercase;
  }
  .secondary-btn {
    display: flex;
    align-items: center;
    gap: calc(var(--spacing) * 3.5);
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-dark-blue);
    text-transform: uppercase;
  }
  .tab {
    display: flex;
    height: 65px;
    width: 100%;
    align-items: center;
    justify-content: space-between;
    border-radius: 10px;
    text-align: start;
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-dark-blue);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
    &:hover {
      @media (hover: hover) {
        padding-inline: calc(var(--spacing) * 5);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .tab.tab-active {
    background-color: var(--color-primary);
    padding-inline: calc(var(--spacing) * 5);
    color: var(--color-white);
  }
  .tab img {
    visibility: hidden;
    opacity: 0%;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        visibility: visible;
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .tab.tab-active img {
    visibility: visible;
    opacity: 100%;
  }
}
p {
  font-size: var(--text-base);
  line-height: var(--tw-leading, var(--text-base--line-height));
  --tw-leading: 1.2;
  line-height: 1.2;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@keyframes header {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(0px);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-space-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-leading: initial;
    }
  }
}
